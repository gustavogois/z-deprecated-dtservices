package pt.gois.dtServices.entity;
// Generated 1/jun/2016 6:41:26 by Hibernate Tools 4.3.1.Final

import java.util.ArrayList;
import java.util.Collection;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Solicitante generated by hbm2java
 */
@Entity
@Table(name = "Solicitante")
public class Solicitante implements java.io.Serializable {

	private Integer id;
	private String nif;
	private String nome;
	private Collection<Processo> processos = new ArrayList<Processo>(0);
	private String telefone;
	private Collection<TipoServicoSolicitante> tiposervicoSolicitantes = new ArrayList<TipoServicoSolicitante>(0);

	public Solicitante() {
	}

	public Solicitante(String nif, String nome, Collection<Processo> processos, String telefone,
			Collection<TipoServicoSolicitante> tiposervicoSolicitantes) {
		this.nif = nif;
		this.nome = nome;
		this.processos = processos;
		this.telefone = telefone;
		this.tiposervicoSolicitantes = tiposervicoSolicitantes;
	}

	@Id
	@GeneratedValue

	@Column(name = "id", nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "nif")
	public String getNif() {
		return this.nif;
	}

	public void setNif(String nif) {
		this.nif = nif;
	}

	@Column(name = "nome")
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitante")
	public Collection<Processo> getProcessos() {
		return this.processos;
	}

	public void setProcessos(Collection<Processo> processos) {
		this.processos = processos;
	}

	@Column(name = "telefone")
	public String getTelefone() {
		return this.telefone;
	}

	public void setTelefone(String telefone) {
		this.telefone = telefone;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "solicitante")
	public Collection<TipoServicoSolicitante> getTiposervicoSolicitantes() {
		return this.tiposervicoSolicitantes;
	}

	public void setTiposervicoSolicitantes(Collection<TipoServicoSolicitante> tiposervicoSolicitantes) {
		this.tiposervicoSolicitantes = tiposervicoSolicitantes;
	}

}
