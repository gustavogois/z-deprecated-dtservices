package pt.gois.dtServices.entity;
// Generated 1/jun/2016 6:41:26 by Hibernate Tools 4.3.1.Final

import java.util.ArrayList;
import java.util.Collection;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Processo generated by hbm2java
 */
@Entity
@Table(name = "Processo")
public class Processo implements java.io.Serializable {

	private Integer id;
	private Boolean comChaves;
	private Date dtCadastro;
	private Date dtFaturamento;
	private Date dtFinalizacao;
	private Date dtInicioExecucao;
	private Date dtOrcamento;
	private Date dtRecebimento;
	private Date dtSolicitacao;
	private EntidadeDeFacturacao entidadeDeFacturacao;
	private int estado;
	private Imovel imovel;
	private String observacoes;
	private Collection<Servico> servicos = new ArrayList<Servico>(0);
	private Solicitante solicitante;

	public Processo() {
	}

	public Processo(int estado) {
		this.estado = estado;
	}

	public Processo(Boolean comChaves, Date dtCadastro, Date dtFaturamento, Date dtFinalizacao, Date dtInicioExecucao,
			Date dtOrcamento, Date dtRecebimento, Date dtSolicitacao, EntidadeDeFacturacao entidadeDeFacturacao,
			int estado, Imovel imovel, String observacoes, Collection<Servico> servicos, Solicitante solicitante) {
		this.comChaves = comChaves;
		this.dtCadastro = dtCadastro;
		this.dtFaturamento = dtFaturamento;
		this.dtFinalizacao = dtFinalizacao;
		this.dtInicioExecucao = dtInicioExecucao;
		this.dtOrcamento = dtOrcamento;
		this.dtRecebimento = dtRecebimento;
		this.dtSolicitacao = dtSolicitacao;
		this.entidadeDeFacturacao = entidadeDeFacturacao;
		this.estado = estado;
		this.imovel = imovel;
		this.observacoes = observacoes;
		this.servicos = servicos;
		this.solicitante = solicitante;
	}

	@Id
	@GeneratedValue

	@Column(name = "id", nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "comChaves")
	public Boolean getComChaves() {
		return this.comChaves;
	}

	public void setComChaves(Boolean comChaves) {
		this.comChaves = comChaves;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtCadastro")
	public Date getDtCadastro() {
		return this.dtCadastro;
	}

	public void setDtCadastro(Date dtCadastro) {
		this.dtCadastro = dtCadastro;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtFaturamento")
	public Date getDtFaturamento() {
		return this.dtFaturamento;
	}

	public void setDtFaturamento(Date dtFaturamento) {
		this.dtFaturamento = dtFaturamento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtFinalizacao")
	public Date getDtFinalizacao() {
		return this.dtFinalizacao;
	}

	public void setDtFinalizacao(Date dtFinalizacao) {
		this.dtFinalizacao = dtFinalizacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtInicioExecucao")
	public Date getDtInicioExecucao() {
		return this.dtInicioExecucao;
	}

	public void setDtInicioExecucao(Date dtInicioExecucao) {
		this.dtInicioExecucao = dtInicioExecucao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtOrcamento")
	public Date getDtOrcamento() {
		return this.dtOrcamento;
	}

	public void setDtOrcamento(Date dtOrcamento) {
		this.dtOrcamento = dtOrcamento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtRecebimento")
	public Date getDtRecebimento() {
		return this.dtRecebimento;
	}

	public void setDtRecebimento(Date dtRecebimento) {
		this.dtRecebimento = dtRecebimento;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dtSolicitacao")
	public Date getDtSolicitacao() {
		return this.dtSolicitacao;
	}

	public void setDtSolicitacao(Date dtSolicitacao) {
		this.dtSolicitacao = dtSolicitacao;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "entidadeFacturacaoId")
	public EntidadeDeFacturacao getEntidadeDeFacturacao() {
		return this.entidadeDeFacturacao;
	}

	public void setEntidadeDeFacturacao(EntidadeDeFacturacao entidadeDeFacturacao) {
		this.entidadeDeFacturacao = entidadeDeFacturacao;
	}

	@Column(name = "estado", nullable = false)
	public int getEstado() {
		return this.estado;
	}

	public void setEstado(int estado) {
		this.estado = estado;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "imovelId")
	public Imovel getImovel() {
		return this.imovel;
	}

	public void setImovel(Imovel imovel) {
		this.imovel = imovel;
	}

	@Column(name = "observacoes")
	public String getObservacoes() {
		return this.observacoes;
	}

	public void setObservacoes(String observacoes) {
		this.observacoes = observacoes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "processo")
	public Collection<Servico> getServicos() {
		return this.servicos;
	}

	public void setServicos(Collection<Servico> servicos) {
		this.servicos = servicos;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "solicitanteId")
	public Solicitante getSolicitante() {
		return this.solicitante;
	}

	public void setSolicitante(Solicitante solicitante) {
		this.solicitante = solicitante;
	}

}
